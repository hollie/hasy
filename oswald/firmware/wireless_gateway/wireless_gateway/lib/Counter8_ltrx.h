//*****************************************************************************
//*****************************************************************************
//  FILENAME: Counter8_ltrx.h
//   Version: 2.5, Updated on 2009/10/15 at 17:11:37
//  Generated by PSoC Designer 5.0.1127.0
//
//  DESCRIPTION: Counter8 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2009. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************

#include <m8c.h>

#pragma fastcall16 Counter8_ltrx_EnableInt
#pragma fastcall16 Counter8_ltrx_DisableInt
#pragma fastcall16 Counter8_ltrx_Start
#pragma fastcall16 Counter8_ltrx_Stop
#pragma fastcall16 Counter8_ltrx_bReadCounter              // Read  DR0
#pragma fastcall16 Counter8_ltrx_WritePeriod               // Write DR1
#pragma fastcall16 Counter8_ltrx_bReadCompareValue         // Read  DR2
#pragma fastcall16 Counter8_ltrx_WriteCompareValue         // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 bCounter8_ltrx_ReadCounter              // Read  DR0 (Deprecated)
#pragma fastcall16 bCounter8_ltrx_ReadCompareValue         // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the Counter8_ltrx API.
//-------------------------------------------------

extern void Counter8_ltrx_EnableInt(void);                           // Proxy Class 1
extern void Counter8_ltrx_DisableInt(void);                          // Proxy Class 1
extern void Counter8_ltrx_Start(void);                               // Proxy Class 1
extern void Counter8_ltrx_Stop(void);                                // Proxy Class 1
extern BYTE Counter8_ltrx_bReadCounter(void);                        // Proxy Class 1
extern void Counter8_ltrx_WritePeriod(BYTE bPeriod);                 // Proxy Class 1
extern BYTE Counter8_ltrx_bReadCompareValue(void);                   // Proxy Class 2
extern void Counter8_ltrx_WriteCompareValue(BYTE bCompareValue);     // Proxy Class 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern BYTE bCounter8_ltrx_ReadCounter(void);            // Deprecated
extern BYTE bCounter8_ltrx_ReadCompareValue(void);       // Deprecated


//--------------------------------------------------
// Constants for Counter8_ltrx API's.
//--------------------------------------------------

#define Counter8_ltrx_CONTROL_REG_START_BIT    ( 0x01 )
#define Counter8_ltrx_INT_REG_ADDR             ( 0x0e1 )
#define Counter8_ltrx_INT_MASK                 ( 0x10 )


//--------------------------------------------------
// Constants for Counter8_ltrx user defined values
//--------------------------------------------------

#define Counter8_ltrx_PERIOD                   ( 0x27 )
#define Counter8_ltrx_COMPARE_VALUE            ( 0x13 )


//-------------------------------------------------
// Register Addresses for Counter8_ltrx
//-------------------------------------------------

#pragma ioport  Counter8_ltrx_COUNTER_REG:  0x030          //DR0 Count register
BYTE            Counter8_ltrx_COUNTER_REG;
#pragma ioport  Counter8_ltrx_PERIOD_REG:   0x031          //DR1 Period register
BYTE            Counter8_ltrx_PERIOD_REG;
#pragma ioport  Counter8_ltrx_COMPARE_REG:  0x032          //DR2 Compare register
BYTE            Counter8_ltrx_COMPARE_REG;
#pragma ioport  Counter8_ltrx_CONTROL_REG:  0x033          //Control register
BYTE            Counter8_ltrx_CONTROL_REG;
#pragma ioport  Counter8_ltrx_FUNC_REG: 0x130              //Function register
BYTE            Counter8_ltrx_FUNC_REG;
#pragma ioport  Counter8_ltrx_INPUT_REG:    0x131          //Input register
BYTE            Counter8_ltrx_INPUT_REG;
#pragma ioport  Counter8_ltrx_OUTPUT_REG:   0x132          //Output register
BYTE            Counter8_ltrx_OUTPUT_REG;
#pragma ioport  Counter8_ltrx_INT_REG:       0x0e1         //Interrupt Mask Register
BYTE            Counter8_ltrx_INT_REG;


//-------------------------------------------------
// Counter8_ltrx Macro 'Functions'
//-------------------------------------------------

#define Counter8_ltrx_Start_M \
   Counter8_ltrx_CONTROL_REG |=  Counter8_ltrx_CONTROL_REG_START_BIT

#define Counter8_ltrx_Stop_M  \
   Counter8_ltrx_CONTROL_REG &= ~Counter8_ltrx_CONTROL_REG_START_BIT

#define Counter8_ltrx_EnableInt_M   \
   M8C_EnableIntMask(Counter8_ltrx_INT_REG, Counter8_ltrx_INT_MASK)

#define Counter8_ltrx_DisableInt_M  \
   M8C_DisableIntMask(Counter8_ltrx_INT_REG, Counter8_ltrx_INT_MASK)


// end of file Counter8_ltrx.h
