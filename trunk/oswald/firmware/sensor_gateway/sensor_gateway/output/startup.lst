

HI-TECH Software Macro Assembler (PSoC MCU) V9.61PL1
                                                                                                           Fri Dec 11 14:36:52 2009


     1                          
     2                          	; HI-TECH C COMPILER (Cypress PSOC) V9.61PL1
     3                          	; Copyright (C) 1984-2008 HI-TECH Software
     4                          
     5                          	; Auto-generated runtime startup code for prelink stage.
     6                          
     7                          	;
     8                          	; Compiler options:
     9                          	;
    10                          	; --asmlist --errformat --chip=CY8C29566 --WARN=0 --OPT=asm,9 \
    11                          	; -Osensor_gateway -Moutput/sensor_gateway.mp --OUTDIR=./output \
    12                          	; ./obj/boot.obj ./obj/main.p1 ./obj/oo.p1 ./obj/orcon.p1 \
    13                          	; ./obj/shtxx.p1 lib/libpsoc.lib lib/libpsoc.lpp \
    14                          	; C:/PROGRA~1/Cypress/Common/CYPRES~2/tools/lib/CY8C29000/cms.lib
    15                          	;
    16                          
    17                          
    18                          	processor	CY8C29566
    19                          	macro	M8C_ClearWDT
    20                          	mov reg[0xE3],0x38
    21  0000'                   	endm
    22                          
    23                          	psect	PD_startup,class=CODE
    24                          	psect	init,class=CODE
    25                          	psect	end_init,class=CODE
    26                          	psect	powerup,class=CODE
    27                          	psect	vectors,ovrld,class=CODE
    28                          	psect	text,class=CODE
    29                          	psect	maintext,class=CODE
    30                          	psect	intrtext,class=CODE
    31                          	psect	fnauto,class=RAM,space=1
    32                          	psect	bss,class=RAM,space=1
    33                          	psect	InterruptRAM,class=RAM,space=1
    34                          	psect	cdata,class=ROM,space=0,reloc=256
    35                          	psect	psoc_config,class=ROM
    36                          	psect	UserModules,class=ROM
    37                          	psect	strings,class=ROM
    38                          	psect	SSCParmBlk,abs,ovrld,class=RAM,space=1
    39  00F8                    	org	0xF8
    40  00F8                    	blk	8
    41                          
    42                          	psect	stackps,class=RAM
    43                          	global	__Lstackps, __stack_start__
    44  0000'                   __stack_start__:
    45                          	psect	bss0,class=RAM,space=1
    46                          	psect	nvram0,class=RAM,space=1
    47                          	psect	rbit0,bit,class=RAM,space=1
    48                          	psect	nvbit0,bit,class=RAM,space=1
    49                          	psect	ramdata0,class=RAM,space=1
    50                          	psect	romdata0,class=BANKROM,space=0
    51                          	psect	bss1,class=RAM,space=1
    52                          	psect	nvram1,class=RAM,space=1
    53                          	psect	rbit1,bit,class=RAM,space=1
    54                          	psect	nvbit1,bit,class=RAM,space=1
    55                          	psect	ramdata1,class=RAM,space=1
    56                          	psect	romdata1,class=BANKROM,space=0
    57                          	psect	bss2,class=RAM,space=1
    58                          	psect	nvram2,class=RAM,space=1
    59                          	psect	rbit2,bit,class=RAM,space=1
    60                          	psect	nvbit2,bit,class=RAM,space=1
    61                          	psect	ramdata2,class=RAM,space=1
    62                          	psect	romdata2,class=BANKROM,space=0
    63                          	psect	bss3,class=RAM,space=1
    64                          	psect	nvram3,class=RAM,space=1
    65                          	psect	rbit3,bit,class=RAM,space=1
    66                          	psect	nvbit3,bit,class=RAM,space=1
    67                          	psect	ramdata3,class=RAM,space=1
    68                          	psect	romdata3,class=BANKROM,space=0
    69                          	psect	bss4,class=RAM,space=1
    70                          	psect	nvram4,class=RAM,space=1
    71                          	psect	rbit4,bit,class=RAM,space=1
    72                          	psect	nvbit4,bit,class=RAM,space=1
    73                          	psect	ramdata4,class=RAM,space=1
    74                          	psect	romdata4,class=BANKROM,space=0
    75                          	psect	bss5,class=RAM,space=1
    76                          	psect	nvram5,class=RAM,space=1
    77                          	psect	rbit5,bit,class=RAM,space=1
    78                          	psect	nvbit5,bit,class=RAM,space=1
    79                          	psect	ramdata5,class=RAM,space=1
    80                          	psect	romdata5,class=BANKROM,space=0
    81                          	psect	bss6,class=RAM,space=1
    82                          	psect	nvram6,class=RAM,space=1
    83                          	psect	rbit6,bit,class=RAM,space=1
    84                          	psect	nvbit6,bit,class=RAM,space=1
    85                          	psect	ramdata6,class=RAM,space=1
    86                          	psect	romdata6,class=BANKROM,space=0
    87                          	psect	bss7,class=RAM,space=1
    88                          	psect	nvram7,class=RAM,space=1
    89                          	psect	rbit7,bit,class=RAM,space=1
    90                          	psect	nvbit7,bit,class=RAM,space=1
    91                          	psect	ramdata7,class=RAM,space=1
    92                          	psect	romdata7,class=BANKROM,space=0
    93                          
    94                          ;Declare areas defined in usermodules and other assembler code
    95                          	psect	InterruptRAM,class=RAM,space=1
    96                          	psect	LTRX_RAM,class=RAM,space=1
    97                          	psect	bss,class=RAM,space=1
    98                          
    99                          	global	start,startup,_main
   100                          	global	reset_vec,intlevel0,intlevel1,intlevel2
   101  0000'                   intlevel0:
   102  0000'                   intlevel1:
   103  0000'                   intlevel2:		; for C funcs called from assembler
   104                          
   105                          	fnconf	fnauto,??,?
   106                          	fnroot	_main
   107  006C                    TMP_DR0	equ	108
   108  006D                    TMP_DR1	equ	109
   109  006E                    TMP_DR2	equ	110
   110  006F                    TMP_DR3	equ	111
   111  00D0                    CUR_PP	equ	208
   112  00D1                    STK_PP	equ	209
   113  00D3                    IDX_PP	equ	211
   114  00D4                    MVR_PP	equ	212
   115  00D5                    MVW_PP	equ	213
   116  00F7                    CPU_F	equ	247
   117                          	psect	vectors
   118  0000'                   reset_vec:
   119  0000'                   start:
   120  0000' 7D 0000'          	ljmp	startup
   121                          
   122                          	psect	init
   123  0000'                   startup:
   124  0000' 62 E3 38          	M8C_ClearWDT
   125  0003' 71 80             	or	f, 0x80	;select multiple RAM page mode
   126  0005' 70 BF             	and	f, 0xBF
   127  0007' 62 D1 07          	mov	reg[STK_PP],7
   128  000A' 50 00'            	mov	a,low __Lstackps
   129  000C' 4E                	swap	a,sp


HI-TECH Software Macro Assembler (PSoC MCU) V9.61PL1
Symbol Table                                                                                               Fri Dec 11 14:36:52 2009

     __Lstackps 0000*           _main 0000*           start 0000           STK_PP 00D1        intlevel0 0000        intlevel1 0000  
      intlevel2 0000        reset_vec 0000          startup 0000  __stack_start__ 0000  
